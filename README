A test microservice application.

https://github.com/lzap/chitest

Manage SSH public keys via REST API and upload them as Key Pairs to AWS EC2.

Inspired by https://github.com/identitatem/idp-configs-api

Dependencies:

* Chi (routing, middleware, render)
* SQLBoiler (models)
* SQLite
* zerolog/CloudWatch
* Prometheus go client
* AWS SDK v2
* OpenAPI not done (idp-configs-api use generation of types)

Models:

* SSHKey (ID, body): a public key
* SSHKeyResource (ID, ssh_key_id, cid): key pair on AWS/EC2

Operations:

* SSHKey CRUD
* SSHKey resource upload (import key to EC2) and delete

How to test it:

    go get
    make migrate
    make run

Use examples/xxx.http files with VSCode "REST Client" plugin to perform REST operations.

Setting up EC2 access (needed for import key operation):

    cp .env.example .env
    vi .env

This is a PUBLIC DOMAIN.
